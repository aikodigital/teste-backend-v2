// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Domain.Models.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uuid")
                        .HasColumnName("equipment_model_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("equipment");
                });

            modelBuilder.Entity("Domain.Models.Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("equipment_model");
                });

            modelBuilder.Entity("Domain.Models.ModelStateHourlyEarnings", b =>
                {
                    b.Property<Guid>("StateId")
                        .HasColumnType("uuid")
                        .HasColumnName("equipment_state_id");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uuid")
                        .HasColumnName("equipment_model_id");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric")
                        .HasColumnName("value");

                    b.HasKey("StateId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("equipment_model_state_hourly_earnings");
                });

            modelBuilder.Entity("Domain.Models.PositionHistory", b =>
                {
                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric")
                        .HasColumnName("lat");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric")
                        .HasColumnName("lon");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("equipment_id");

                    b.HasKey("Latitude", "Longitude", "Date");

                    b.HasIndex("EquipmentId");

                    b.ToTable("equipment_position_history");
                });

            modelBuilder.Entity("Domain.Models.State", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Color")
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("equipment_state");
                });

            modelBuilder.Entity("Domain.Models.StateHistory", b =>
                {
                    b.Property<Guid>("StateId")
                        .HasColumnType("uuid")
                        .HasColumnName("equipment_state_id");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("equipment_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date");

                    b.HasKey("StateId", "EquipmentId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("equipment_state_history");
                });

            modelBuilder.Entity("Domain.Models.Equipment", b =>
                {
                    b.HasOne("Domain.Models.Model", "Model")
                        .WithMany("Equipments")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Domain.Models.ModelStateHourlyEarnings", b =>
                {
                    b.HasOne("Domain.Models.Model", "Model")
                        .WithMany("ModelStateHourlyEarnings")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.State", "State")
                        .WithMany("ModelStateHourlyEarnings")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Domain.Models.PositionHistory", b =>
                {
                    b.HasOne("Domain.Models.Equipment", "Equipment")
                        .WithMany("PositionHistories")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("Domain.Models.StateHistory", b =>
                {
                    b.HasOne("Domain.Models.Equipment", "Equipment")
                        .WithMany("StateHistories")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.State", "State")
                        .WithMany("StateHistories")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Domain.Models.Equipment", b =>
                {
                    b.Navigation("PositionHistories");

                    b.Navigation("StateHistories");
                });

            modelBuilder.Entity("Domain.Models.Model", b =>
                {
                    b.Navigation("Equipments");

                    b.Navigation("ModelStateHourlyEarnings");
                });

            modelBuilder.Entity("Domain.Models.State", b =>
                {
                    b.Navigation("ModelStateHourlyEarnings");

                    b.Navigation("StateHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
